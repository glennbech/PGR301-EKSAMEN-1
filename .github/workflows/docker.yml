name: Build and Push Docker to ECR
on:
  push:
    branches:
      - main
      - '*'
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Build Docker Image
        run: |
           docker build . -t 2039-ppes
           docker save -o /tmp/2039-ppes.tar 2039-ppes

      - name: Upload Docker Image as Artifact
        if: github.ref == 'refs/heads/main'
        # upload built Docker Image
        uses: actions/upload-artifact@v2
        with:
          name: 2039-ppes
          path: /tmp/2039-ppes.tar
           
  push_to_registry:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        # Download Docker image from previous job
      - name: Download artifacts (Docker images) from previous workflows
        uses: actions/download-artifact@v2
        with:
          name: 2039-ppes
          path: tmp  # Specify the path to download the artifact to
        
      - name: Push Docker image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker load --input tmp/2039-ppes.tar  # Correct the path to match the downloaded artifact
          docker tag 2039-ppes 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo-s:$rev
          docker tag 2039-ppes 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo-s:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo-s:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/2039-ecr-repo-s:latest

  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/main'
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
          SERVICE_NAME: ${{secrets.SERVICE_NAME}}
          working-directory: ./infra
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.working-directory}}

      - name: Terraform Plan
        run: terraform plan -var "service_name=$SERVICE_NAME" -var "alarm_email=$NOTIFICATION_EMAIL" -no-color
        continue-on-error: true
        working-directory: ${{env.working-directory}}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -var "service_name=$SERVICE_NAME" -var "alarm_email=$NOTIFICATION_EMAIL" --auto-approve 
        working-directory: ${{env.working-directory}}